{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Exercises \n",
    "\n",
    "## Ideas\n",
    "\n",
    "1. Use PAVICS WPS to to take a yearly average of a netcdf file\n",
    "    * Use the Hummingbird WPS suite : hint use the 'cdo_operation' process to run 'yearmean' \n",
    "    * Use this OpenDap link to a CanESM monthly tas .nc file : 'http://boreas.ouranos.ca:8083/thredds/dodsC/birdhouse/CCCMA/CanESM2/historical/mon/atmos/r1i1p1/tas/tas_Amon_CanESM2_historical_r1i1p1_185001-200512.nc'\n",
    "    * PAVICS wps url : 'https://boreas.ouranos.ca/twitcher/ows/proxy/hummingbord/wps'\n",
    "    * the NCDUMP example can help structure your code!\n",
    "    \n",
    "    \n",
    "2. Access point information from a layer (lat, lon of your choice for the layer of your choice). There are two ways to do this, one is to use a Web Coverage Service to access the gridded data, the other is to use the GetFeatureInfo operation of Web Mapping Service (see http://cite.opengeospatial.org/pub/cite/files/edu/wms/text/operations.html#getfeatureinfo). The challenge with GeoMet's WCS services is that it tends to be fragile (not all layers seem to work all the time). For WMS, the service appears robust, but the challenge is rather to map the geographic coordinates of the point of interest (lat, lon) into native geodesic coordinates (x,y). \n",
    "\n",
    "    * Possible datasources:\n",
    "        * ECCC GeoMet WCS : 'http://geo.weather.gc.ca/geomet/?lang=en&service=WCS'\n",
    "        * ECCC GeoMet WMS : 'http://geo.weather.gc.ca/geomet/?lang=en&service=WMS'\n",
    "        \n",
    "       \n",
    " "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## WPS Exercise : solution\n",
    "Run PAVICS 'getpoint' wps to extract data from a single grid cell"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 160,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "from owslib.wps import WebProcessingService\n",
    "import requests\n",
    "from lxml import etree\n",
    "from netCDF4 import Dataset\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "def parseStatus(execute):\n",
    "    o = requests.get(execute.statusLocation)\n",
    "    t = etree.fromstring(o.content)\n",
    "    ref = t.getchildren()[-1].getchildren()[-1].getchildren()[-1].get('{http://www.w3.org/1999/xlink}href')\n",
    "    \n",
    "    return ref"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 161,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "url = 'https://boreas.ouranos.ca/twitcher/ows/proxy/hummingbird/wps'\n",
    "wps = WebProcessingService(url=url)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 162,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "inputs : dataset  :  You may provide a URL or upload a NetCDF file.\n",
      "inputs : dataset_opendap  :  Or provide a remote OpenDAP data URL, for example: http://www.esrl.noaa.gov/psd/thredds/dodsC/Datasets/ncep.reanalysis2.dailyavgs/surface/mslp.2016.nc\n",
      "inputs : operator  :  Choose a CDO Operator.                          See the CDO documentation to lookup a description of the operators.\n",
      "outputs : output  :  NetCDF Output generated by CDO.\n"
     ]
    }
   ],
   "source": [
    "# Get metadata about the process\n",
    "proc_name = 'cdo_operation'\n",
    "process = wps.describeprocess(proc_name) # get process info\n",
    "for i in process.dataInputs:\n",
    "    print('inputs :', i.identifier, ' : ', i.abstract)\n",
    "for i in process.processOutputs:\n",
    "    print('outputs :', i.identifier, ' : ', i.abstract)\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 163,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "http://boreas.ouranos.ca:8083/thredds/dodsC/birdhouse/CCCMA/CanESM2/historical/mon/atmos/r1i1p1/tas/tas_Amon_CanESM2_historical_r1i1p1_185001-200512.nc\n"
     ]
    }
   ],
   "source": [
    "nc_url = 'http://boreas.ouranos.ca:8083/thredds/dodsC/birdhouse/CCCMA/CanESM2/historical/mon/atmos/r1i1p1/tas/tas_Amon_CanESM2_historical_r1i1p1_185001-200512.nc'\n",
    "print(nc_url)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 164,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[('dataset_opendap', 'http://boreas.ouranos.ca:8083/thredds/dodsC/birdhouse/CCCMA/CanESM2/historical/mon/atmos/r1i1p1/tas/tas_Amon_CanESM2_historical_r1i1p1_185001-200512.nc'), ('operator', 'yearmean')]\n"
     ]
    }
   ],
   "source": [
    "myinputs = []\n",
    "myinputs.append(('dataset_opendap',nc_url))\n",
    "myinputs.append(('operator','yearmean'))\n",
    "print(myinputs)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 165,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "cdo_operation\n"
     ]
    }
   ],
   "source": [
    "print(proc_name)\n",
    "execute = wps.execute(proc_name, myinputs)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 166,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "https://pavics.ouranos.ca:443/wpsoutputs/hummingbird/749ec268-bba3-11e8-8b91-0242ac12000d/cdo_yearmean_VcLf76.nc\n"
     ]
    }
   ],
   "source": [
    "ref = parseStatus(execute)\n",
    "print(ref)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 167,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "./output/cdo_yearmean_VcLf76.nc\n"
     ]
    }
   ],
   "source": [
    "r= requests.get(ref)\n",
    "outfile = './output/' +ref.split('/')[-1] \n",
    "print(outfile)\n",
    "with open(outfile, 'wb') as f:\n",
    "    f.write(r.content)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 168,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "nc1 = Dataset(outfile)\n",
    "tas = nc1['tas'][:]\n",
    "lon = nc1.variables['lon'][:]\n",
    "lat = nc1.variables['lat'][:]\n",
    "plt.contourf(lon,lat,tasmax.mean(axis=0),20)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 169,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\nmXKbAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(tas[:,10,10])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## WCS Example"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 170,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "from owslib.wcs import WebCoverageService\n",
    "geomet_wcs_url = 'http://geo.weather.gc.ca/geomet/?lang=en&service=WCS'\n",
    "pavics_wcs_url = 'http://boreas.ouranos.ca:8087/geoserver/wcs'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 179,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "crs='epsg:4326'\n",
    "w = 1\n",
    "h = 1\n",
    "\n",
    "wcs = WebCoverageService('http://geo.weather.gc.ca/geomet?SERVICE=WCS&VERSION=1.0.0')\n",
    "c = wcs.getCoverage('RDPA.24F_PR', crs=crs, format='image/tiff', bbox=(-145, 45, -145, 45), width=w, height=h)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 180,
   "metadata": {},
   "outputs": [],
   "source": [
    "fn = 'rdpa.24f_pr.tiff'\n",
    "with open(fn, 'wb') as f:\n",
    "    f.write(c.read())\n",
    "    \n",
    "data = plt.imread(fn)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 183,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[[  0   0   0 255]]]\n"
     ]
    }
   ],
   "source": [
    "print(data)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## WMS Example\n",
    "\n",
    "Here the challenge is to make the correspondance between geographic coordinates and the layer's geodesic coordinates."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 185,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "from owslib.wms import WebMapService\n",
    "geomet_wms_url ='http://geo.weather.gc.ca/geomet/?lang=en&service=WMS'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 188,
   "metadata": {},
   "outputs": [],
   "source": [
    "wms = WebMapService(geomet_wms_url, version='1.3.0')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 192,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "layer = 'RDPA.24F_PR'\n",
    "c = wms.contents[layer]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 206,
   "metadata": {},
   "outputs": [],
   "source": [
    "resp = wms.getfeatureinfo(layers=[layer,], srs=crs, bbox=(-146, 44, -144, 46), format='image/png',  query_layers=[layer,], info_format='application/vnd.ogc.gml', size=(10,10), xy=(5,5))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 209,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n",
      "\n",
      "<msGMLOutput \n",
      "\t xmlns:gml=\"http://www.opengis.net/gml\"\n",
      "\t xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n",
      "\t xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n",
      "\t<RDPA.24F_PR_layer>\n",
      "\t<gml:name>RDPA.24F - Quantity of precipitation</gml:name>\n",
      "\t\t<RDPA.24F_PR_feature>\n",
      "\t\t\t<gml:boundedBy>\n",
      "\t\t\t\t<gml:Box srsName=\"EPSG:4326\">\n",
      "\t\t\t\t\t<gml:coordinates>-149.641318,45.444035 -149.641318,45.444035</gml:coordinates>\n",
      "\t\t\t\t</gml:Box>\n",
      "\t\t\t</gml:boundedBy>\n",
      "\t\t\t<x>-149.64132</x>\n",
      "\t\t\t<y>45.444035</y>\n",
      "\t\t\t<value_0>0.51100004</value_0>\n",
      "\t\t\t<value_1>0</value_1>\n",
      "\t\t\t<value_list>0.51100004,0</value_list>\n",
      "\t\t\t<class>0.1 - 2.0</class>\n",
      "\t\t\t<red>-1</red>\n",
      "\t\t\t<green>-1</green>\n",
      "\t\t\t<blue>-1</blue>\n",
      "\t\t</RDPA.24F_PR_feature>\n",
      "\t\t<RDPA.24F_PR_feature>\n",
      "\t\t\t<gml:boundedBy>\n",
      "\t\t\t\t<gml:Box srsName=\"EPSG:4326\">\n",
      "\t\t\t\t\t<gml:coordinates>-149.549319,45.495530 -149.549319,45.495530</gml:coordinates>\n",
      "\t\t\t\t</gml:Box>\n",
      "\t\t\t</gml:boundedBy>\n",
      "\t\t\t<x>-149.54932</x>\n",
      "\t\t\t<y>45.49553</y>\n",
      "\t\t\t<value_0>0.32050002</value_0>\n",
      "\t\t\t<value_1>0</value_1>\n",
      "\t\t\t<value_list>0.32050002,0</value_list>\n",
      "\t\t\t<class>0.1 - 2.0</class>\n",
      "\t\t\t<red>-1</red>\n",
      "\t\t\t<green>-1</green>\n",
      "\t\t\t<blue>-1</blue>\n",
      "\t\t</RDPA.24F_PR_feature>\n",
      "\t\t<RDPA.24F_PR_feature>\n",
      "\t\t\t<gml:boundedBy>\n",
      "\t\t\t\t<gml:Box srsName=\"EPSG:4326\">\n",
      "\t\t\t\t\t<gml:coordinates>-149.457084,45.546940 -149.457084,45.546940</gml:coordinates>\n",
      "\t\t\t\t</gml:Box>\n",
      "\t\t\t</gml:boundedBy>\n",
      "\t\t\t<x>-149.45708</x>\n",
      "\t\t\t<y>45.54694</y>\n",
      "\t\t\t<value_0>0.24400002</value_0>\n",
      "\t\t\t<value_1>0</value_1>\n",
      "\t\t\t<value_list>0.24400002,0</value_list>\n",
      "\t\t\t<class>0.1 - 2.0</class>\n",
      "\t\t\t<red>-1</red>\n",
      "\t\t\t<green>-1</green>\n",
      "\t\t\t<blue>-1</blue>\n",
      "\t\t</RDPA.24F_PR_feature>\n",
      "\t\t<RDPA.24F_PR_feature>\n",
      "\t\t\t<gml:boundedBy>\n",
      "\t\t\t\t<gml:Box srsName=\"EPSG:4326\">\n",
      "\t\t\t\t\t<gml:coordinates>-149.364613,45.598265 -149.364613,45.598265</gml:coordinates>\n",
      "\t\t\t\t</gml:Box>\n",
      "\t\t\t</gml:boundedBy>\n",
      "\t\t\t<x>-149.36461</x>\n",
      "\t\t\t<y>45.598265</y>\n",
      "\t\t\t<value_0>0.23650001</value_0>\n",
      "\t\t\t<value_1>0</value_1>\n",
      "\t\t\t<value_list>0.23650001,0</value_list>\n",
      "\t\t\t<class>0.1 - 2.0</class>\n",
      "\t\t\t<red>-1</red>\n",
      "\t\t\t<green>-1</green>\n",
      "\t\t\t<blue>-1</blue>\n",
      "\t\t</RDPA.24F_PR_feature>\n",
      "\t\t<RDPA.24F_PR_feature>\n",
      "\t\t\t<gml:boundedBy>\n",
      "\t\t\t\t<gml:Box srsName=\"EPSG:4326\">\n",
      "\t\t\t\t\t<gml:coordinates>-149.271905,45.649504 -149.271905,45.649504</gml:coordinates>\n",
      "\t\t\t\t</gml:Box>\n",
      "\t\t\t</gml:boundedBy>\n",
      "\t\t\t<x>-149.2719</x>\n",
      "\t\t\t<y>45.649504</y>\n",
      "\t\t\t<value_0>0.29000002</value_0>\n",
      "\t\t\t<value_1>0</value_1>\n",
      "\t\t\t<value_list>0.29000002,0</value_list>\n",
      "\t\t\t<class>0.1 - 2.0</class>\n",
      "\t\t\t<red>-1</red>\n",
      "\t\t\t<green>-1</green>\n",
      "\t\t\t<blue>-1</blue>\n",
      "\t\t</RDPA.24F_PR_feature>\n",
      "\t\t<RDPA.24F_PR_feature>\n",
      "\t\t\t<gml:boundedBy>\n",
      "\t\t\t\t<gml:Box srsName=\"EPSG:4326\">\n",
      "\t\t\t\t\t<gml:coordinates>-149.178959,45.700656 -149.178959,45.700656</gml:coordinates>\n",
      "\t\t\t\t</gml:Box>\n",
      "\t\t\t</gml:boundedBy>\n",
      "\t\t\t<x>-149.17896</x>\n",
      "\t\t\t<y>45.700656</y>\n",
      "\t\t\t<value_0>0.38150001</value_0>\n",
      "\t\t\t<value_1>0</value_1>\n",
      "\t\t\t<value_list>0.38150001,0</value_list>\n",
      "\t\t\t<class>0.1 - 2.0</class>\n",
      "\t\t\t<red>-1</red>\n",
      "\t\t\t<green>-1</green>\n",
      "\t\t\t<blue>-1</blue>\n",
      "\t\t</RDPA.24F_PR_feature>\n",
      "\t\t<RDPA.24F_PR_feature>\n",
      "\t\t\t<gml:boundedBy>\n",
      "\t\t\t\t<gml:Box srsName=\"EPSG:4326\">\n",
      "\t\t\t\t\t<gml:coordinates>-149.085776,45.751721 -149.085776,45.751721</gml:coordinates>\n",
      "\t\t\t\t</gml:Box>\n",
      "\t\t\t</gml:boundedBy>\n",
      "\t\t\t<x>-149.08578</x>\n",
      "\t\t\t<y>45.751721</y>\n",
      "\t\t\t<value_0>0.49600002</value_0>\n",
      "\t\t\t<value_1>0</value_1>\n",
      "\t\t\t<value_list>0.49600002,0</value_list>\n",
      "\t\t\t<class>0.1 - 2.0</class>\n",
      "\t\t\t<red>-1</red>\n",
      "\t\t\t<green>-1</green>\n",
      "\t\t\t<blue>-1</blue>\n",
      "\t\t</RDPA.24F_PR_feature>\n",
      "\t\t<RDPA.24F_PR_feature>\n",
      "\t\t\t<gml:boundedBy>\n",
      "\t\t\t\t<gml:Box srsName=\"EPSG:4326\">\n",
      "\t\t\t\t\t<gml:coordinates>-148.992354,45.802699 -148.992354,45.802699</gml:coordinates>\n",
      "\t\t\t\t</gml:Box>\n",
      "\t\t\t</gml:boundedBy>\n",
      "\t\t\t<x>-148.99235</x>\n",
      "\t\t\t<y>45.802699</y>\n",
      "\t\t\t<value_0>0.59500003</value_0>\n",
      "\t\t\t<value_1>0</value_1>\n",
      "\t\t\t<value_list>0.59500003,0</value_list>\n",
      "\t\t\t<class>0.1 - 2.0</class>\n",
      "\t\t\t<red>-1</red>\n",
      "\t\t\t<green>-1</green>\n",
      "\t\t\t<blue>-1</blue>\n",
      "\t\t</RDPA.24F_PR_feature>\n",
      "\t\t<RDPA.24F_PR_feature>\n",
      "\t\t\t<gml:boundedBy>\n",
      "\t\t\t\t<gml:Box srsName=\"EPSG:4326\">\n",
      "\t\t\t\t\t<gml:coordinates>-148.898694,45.853588 -148.898694,45.853588</gml:coordinates>\n",
      "\t\t\t\t</gml:Box>\n",
      "\t\t\t</gml:boundedBy>\n",
      "\t\t\t<x>-148.89869</x>\n",
      "\t\t\t<y>45.853588</y>\n",
      "\t\t\t<value_0>0.65600002</value_0>\n",
      "\t\t\t<value_1>0</value_1>\n",
      "\t\t\t<value_list>0.65600002,0</value_list>\n",
      "\t\t\t<class>0.1 - 2.0</class>\n",
      "\t\t\t<red>-1</red>\n",
      "\t\t\t<green>-1</green>\n",
      "\t\t\t<blue>-1</blue>\n",
      "\t\t</RDPA.24F_PR_feature>\n",
      "\t\t<RDPA.24F_PR_feature>\n",
      "\t\t\t<gml:boundedBy>\n",
      "\t\t\t\t<gml:Box srsName=\"EPSG:4326\">\n",
      "\t\t\t\t\t<gml:coordinates>-148.804795,45.904389 -148.804795,45.904389</gml:coordinates>\n",
      "\t\t\t\t</gml:Box>\n",
      "\t\t\t</gml:boundedBy>\n",
      "\t\t\t<x>-148.8048</x>\n",
      "\t\t\t<y>45.904389</y>\n",
      "\t\t\t<value_0>0.64100003</value_0>\n",
      "\t\t\t<value_1>0</value_1>\n",
      "\t\t\t<value_list>0.64100003,0</value_list>\n",
      "\t\t\t<class>0.1 - 2.0</class>\n",
      "\t\t\t<red>-1</red>\n",
      "\t\t\t<green>-1</green>\n",
      "\t\t\t<blue>-1</blue>\n",
      "\t\t</RDPA.24F_PR_feature>\n",
      "\t\t<RDPA.24F_PR_feature>\n",
      "\t\t\t<gml:boundedBy>\n",
      "\t\t\t\t<gml:Box srsName=\"EPSG:4326\">\n",
      "\t\t\t\t\t<gml:coordinates>-148.710657,45.955101 -148.710657,45.955101</gml:coordinates>\n",
      "\t\t\t\t</gml:Box>\n",
      "\t\t\t</gml:boundedBy>\n",
      "\t\t\t<x>-148.71066</x>\n",
      "\t\t\t<y>45.955101</y>\n",
      "\t\t\t<value_0>0.60250002</value_0>\n",
      "\t\t\t<value_1>0</value_1>\n",
      "\t\t\t<value_list>0.60250002,0</value_list>\n",
      "\t\t\t<class>0.1 - 2.0</class>\n",
      "\t\t\t<red>-1</red>\n",
      "\t\t\t<green>-1</green>\n",
      "\t\t\t<blue>-1</blue>\n",
      "\t\t</RDPA.24F_PR_feature>\n",
      "\t\t<RDPA.24F_PR_feature>\n",
      "\t\t\t<gml:boundedBy>\n",
      "\t\t\t\t<gml:Box srsName=\"EPSG:4326\">\n",
      "\t\t\t\t\t<gml:coordinates>-148.616279,46.005724 -148.616279,46.005724</gml:coordinates>\n",
      "\t\t\t\t</gml:Box>\n",
      "\t\t\t</gml:boundedBy>\n",
      "\t\t\t<x>-148.61628</x>\n",
      "\t\t\t<y>46.005724</y>\n",
      "\t\t\t<value_0>0.72500002</value_0>\n",
      "\t\t\t<value_1>0</value_1>\n",
      "\t\t\t<value_list>0.72500002,0</value_list>\n",
      "\t\t\t<class>0.1 - 2.0</class>\n",
      "\t\t\t<red>-1</red>\n",
      "\t\t\t<green>-1</green>\n",
      "\t\t\t<blue>-1</blue>\n",
      "\t\t</RDPA.24F_PR_feature>\n",
      "\t\t<RDPA.24F_PR_feature>\n",
      "\t\t\t<gml:boundedBy>\n",
      "\t\t\t\t<gml:Box srsName=\"EPSG:4326\">\n",
      "\t\t\t\t\t<gml:coordinates>-148.521660,46.056255 -148.521660,46.056255</gml:coordinates>\n",
      "\t\t\t\t</gml:Box>\n",
      "\t\t\t</gml:boundedBy>\n",
      "\t\t\t<x>-148.52166</x>\n",
      "\t\t\t<y>46.056255</y>\n",
      "\t\t\t<value_0>1.0225</value_0>\n",
      "\t\t\t<value_1>0</value_1>\n",
      "\t\t\t<value_list>1.0225,0</value_list>\n",
      "\t\t\t<class>0.1 - 2.0</class>\n",
      "\t\t\t<red>-1</red>\n",
      "\t\t\t<green>-1</green>\n",
      "\t\t\t<blue>-1</blue>\n",
      "\t\t</RDPA.24F_PR_feature>\n",
      "\t\t<RDPA.24F_PR_feature>\n",
      "\t\t\t<gml:boundedBy>\n",
      "\t\t\t\t<gml:Box srsName=\"EPSG:4326\">\n",
      "\t\t\t\t\t<gml:coordinates>-148.426801,46.106697 -148.426801,46.106697</gml:coordinates>\n",
      "\t\t\t\t</gml:Box>\n",
      "\t\t\t</gml:boundedBy>\n",
      "\t\t\t<x>-148.4268</x>\n",
      "\t\t\t<y>46.106697</y>\n",
      "\t\t\t<value_0>1.3505001</value_0>\n",
      "\t\t\t<value_1>0</value_1>\n",
      "\t\t\t<value_list>1.3505001,0</value_list>\n",
      "\t\t\t<class>0.1 - 2.0</class>\n",
      "\t\t\t<red>-1</red>\n",
      "\t\t\t<green>-1</green>\n",
      "\t\t\t<blue>-1</blue>\n",
      "\t\t</RDPA.24F_PR_feature>\n",
      "\t\t<RDPA.24F_PR_feature>\n",
      "\t\t\t<gml:boundedBy>\n",
      "\t\t\t\t<gml:Box srsName=\"EPSG:4326\">\n",
      "\t\t\t\t\t<gml:coordinates>-148.331701,46.157047 -148.331701,46.157047</gml:coordinates>\n",
      "\t\t\t\t</gml:Box>\n",
      "\t\t\t</gml:boundedBy>\n",
      "\t\t\t<x>-148.3317</x>\n",
      "\t\t\t<y>46.157047</y>\n",
      "\t\t\t<value_0>1.6785001</value_0>\n",
      "\t\t\t<value_1>0</value_1>\n",
      "\t\t\t<value_list>1.6785001,0</value_list>\n",
      "\t\t\t<class>0.1 - 2.0</class>\n",
      "\t\t\t<red>-1</red>\n",
      "\t\t\t<green>-1</green>\n",
      "\t\t\t<blue>-1</blue>\n",
      "\t\t</RDPA.24F_PR_feature>\n",
      "\t\t<RDPA.24F_PR_feature>\n",
      "\t\t\t<gml:boundedBy>\n",
      "\t\t\t\t<gml:Box srsName=\"EPSG:4326\">\n",
      "\t\t\t\t\t<gml:coordinates>-148.236360,46.207305 -148.236360,46.207305</gml:coordinates>\n",
      "\t\t\t\t</gml:Box>\n",
      "\t\t\t</gml:boundedBy>\n",
      "\t\t\t<x>-148.23636</x>\n",
      "\t\t\t<y>46.207305</y>\n",
      "\t\t\t<value_0>1.9455001</value_0>\n",
      "\t\t\t<value_1>0</value_1>\n",
      "\t\t\t<value_list>1.9455001,0</value_list>\n",
      "\t\t\t<class>0.1 - 2.0</class>\n",
      "\t\t\t<red>-1</red>\n",
      "\t\t\t<green>-1</green>\n",
      "\t\t\t<blue>-1</blue>\n",
      "\t\t</RDPA.24F_PR_feature>\n",
      "\t\t<RDPA.24F_PR_feature>\n",
      "\t\t\t<gml:boundedBy>\n",
      "\t\t\t\t<gml:Box srsName=\"EPSG:4326\">\n",
      "\t\t\t\t\t<gml:coordinates>-148.140777,46.257470 -148.140777,46.257470</gml:coordinates>\n",
      "\t\t\t\t</gml:Box>\n",
      "\t\t\t</gml:boundedBy>\n",
      "\t\t\t<x>-148.14078</x>\n",
      "\t\t\t<y>46.25747</y>\n",
      "\t\t\t<value_0>2.0525</value_0>\n",
      "\t\t\t<value_1>0</value_1>\n",
      "\t\t\t<value_list>2.0525,0</value_list>\n",
      "\t\t\t<class>2.0 - 5.0</class>\n",
      "\t\t\t<red>-1</red>\n",
      "\t\t\t<green>-1</green>\n",
      "\t\t\t<blue>-1</blue>\n",
      "\t\t</RDPA.24F_PR_feature>\n",
      "\t\t<RDPA.24F_PR_feature>\n",
      "\t\t\t<gml:boundedBy>\n",
      "\t\t\t\t<gml:Box srsName=\"EPSG:4326\">\n",
      "\t\t\t\t\t<gml:coordinates>-148.044951,46.307543 -148.044951,46.307543</gml:coordinates>\n",
      "\t\t\t\t</gml:Box>\n",
      "\t\t\t</gml:boundedBy>\n",
      "\t\t\t<x>-148.04495</x>\n",
      "\t\t\t<y>46.307543</y>\n",
      "\t\t\t<value_0>1.9225001</value_0>\n",
      "\t\t\t<value_1>0</value_1>\n",
      "\t\t\t<value_list>1.9225001,0</value_list>\n",
      "\t\t\t<class>0.1 - 2.0</class>\n",
      "\t\t\t<red>-1</red>\n",
      "\t\t\t<green>-1</green>\n",
      "\t\t\t<blue>-1</blue>\n",
      "\t\t</RDPA.24F_PR_feature>\n",
      "\t\t<RDPA.24F_PR_feature>\n",
      "\t\t\t<gml:boundedBy>\n",
      "\t\t\t\t<gml:Box srsName=\"EPSG:4326\">\n",
      "\t\t\t\t\t<gml:coordinates>-147.948884,46.357522 -147.948884,46.357522</gml:coordinates>\n",
      "\t\t\t\t</gml:Box>\n",
      "\t\t\t</gml:boundedBy>\n",
      "\t\t\t<x>-147.94888</x>\n",
      "\t\t\t<y>46.357522</y>\n",
      "\t\t\t<value_0>1.5870001</value_0>\n",
      "\t\t\t<value_1>0</value_1>\n",
      "\t\t\t<value_list>1.5870001,0</value_list>\n",
      "\t\t\t<class>0.1 - 2.0</class>\n",
      "\t\t\t<red>-1</red>\n",
      "\t\t\t<green>-1</green>\n",
      "\t\t\t<blue>-1</blue>\n",
      "\t\t</RDPA.24F_PR_feature>\n",
      "\t\t<RDPA.24F_PR_feature>\n",
      "\t\t\t<gml:boundedBy>\n",
      "\t\t\t\t<gml:Box srsName=\"EPSG:4326\">\n",
      "\t\t\t\t\t<gml:coordinates>-147.852573,46.407408 -147.852573,46.407408</gml:coordinates>\n",
      "\t\t\t\t</gml:Box>\n",
      "\t\t\t</gml:boundedBy>\n",
      "\t\t\t<x>-147.85257</x>\n",
      "\t\t\t<y>46.407408</y>\n",
      "\t\t\t<value_0>1.1595</value_0>\n",
      "\t\t\t<value_1>0</value_1>\n",
      "\t\t\t<value_list>1.1595,0</value_list>\n",
      "\t\t\t<class>0.1 - 2.0</class>\n",
      "\t\t\t<red>-1</red>\n",
      "\t\t\t<green>-1</green>\n",
      "\t\t\t<blue>-1</blue>\n",
      "\t\t</RDPA.24F_PR_feature>\n",
      "\t</RDPA.24F_PR_layer>\n",
      "</msGMLOutput>\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(resp.read().decode())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 199,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "b'<?xml version=\\'1.0\\' encoding=\"UTF-8\" standalone=\"no\" ?>\\n<ServiceExceptionReport version=\"1.3.0\" xmlns=\"http://www.opengis.net/ogc\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.opengis.net/ogc http://schemas.opengis.net/wms/1.3.0/exceptions_1_3_0.xsd\">\\n<ServiceException code=\"LayerNotDefined\">\\nmsWMSLoadGetMapParams(): WMS server error. Invalid layer(s) given in the LAYERS parameter. A layer might be disabled for this request. Check wms/ows_enable_request settings.\\n</ServiceException>\\n</ServiceExceptionReport>\\n'"
      ]
     },
     "execution_count": 199,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "resp.read()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "layer = 'Synthese2015:TempAnnObs'\n",
    "obj = wcs.contents[layer]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "resp = wcs.getCoverage(layer, bbox=obj.boundingBoxWGS84, crs=obj.supportedCRS[0], width=79, height=61, format='GeoTiff')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "b'<?xml version=\"1.0\" encoding=\"UTF-8\"?><ServiceExceptionReport version=\"1.2.0\" >   <ServiceException>\\n      java.lang.NullPointerException\\n</ServiceException></ServiceExceptionReport>'"
      ]
     },
     "execution_count": 124,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "resp.read()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true
   },
   "source": [
    "# WFS exercise\n",
    "\n",
    "I still can't find a way to extract the XML into a meaningful object..."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 133,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "from owslib.wfs import WebFeatureService\n",
    "pavics_wfs_url = 'http://boreas.ouranos.ca:8087/geoserver/wfs'\n",
    "wfs = WebFeatureService(pavics_wfs_url, version='1.1.0')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 134,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "obj = wfs.contents['scratchTJS:canada_admin_boundaries']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 190,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "feat = wfs.getfeature(obj.id)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 150,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "from osgeo import ogr"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 194,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "driver = ogr.GetDriverByName('WFS')\n",
    "source = driver.Open(txt)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 195,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "source"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 184,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "source"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 188,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'<?xml version=\"1.0\" encoding=\"UTF-8\"?><wfs:FeatureCollection xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:TravisTest=\"http://boreas.ouranos.ca:8087/geoserver/TravisTest\" xmlns:wfs=\"http://www.opengis.net/wfs\" xmlns:gml=\"http://www.opengis.net/gml\" xmlns:ogc=\"http://www.opengis.net/ogc\" xmlns:ows=\"http://www.opengis.net/ows\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:scratchTJS=\"http://boreas.ouranos.ca:8087/scratchtjs\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" numberOfFeatures=\"13\" timeStamp=\"2018-09-18T17:22:25.259Z\" xsi:schemaLocation=\"http://boreas.ouranos.ca:8087/scratchtjs http://boreas.ouranos.ca:8087/geoserver/wfs?service=WFS&amp;version=1.1.0&amp;request=DescribeFeatureType&amp;typeName=scratchTJS%3Acanada_admin_boundaries http://www.opengis.net/wfs http://boreas.ouranos.ca:8087/geoserver/schemas/wfs/1.1.0/wfs.xsd\"><gml:boundedBy><gml:Envelope srsDimension=\"2\" srsName=\"GCS_WGS_1984\"><gml:lowerCorner>-141.01807315799994 41.681435425000075</gml:lowerCorner><gml:upperCorner>-52.61940850399992 83.13550252400006</gml:upperCorner></gml:Envelope></gml:boundedBy><gml:featureMembers><scratchTJS:canada_admin_boundaries gml:id=\"canada_admin_boundaries.1\"><gml:boundedBy><gml:Envelope srsName=\"GCS_WGS_1984\" srsDimension=\"2\"><gml:lowerCorner>-139.0522 48.3089</gml:lowerCorner><gml:upperCorner>-114.0542 60.0001</gml:upperCorner></gml:Envelope></gml:boundedBy><scratchTJS:the_geom><gml:MultiSurface srsName=\"GCS_WGS_1984\" srsDimension=\"2\"><gml:surfaceMember><gml:Polygon><gml:exterior><gml:LinearRing><gml:posList>-123.5398 48.3173 -123.5397 48.3172 -123.5393 48.3172 -123.5388 48.3171 -123.538 48.3173 -123.5378 48.3174 -123.5374 48.3174 -123.5373 48.3172 -123.5374 48.3167 -123.5386 48.3166 -123.5386 48.3165 -123.5382 48.3165 -123.5381 48.3164 -123.5386 48.3162 -123.5389 48.3159 -123.5401 48.3159 -123.5405 48.3158 -123.5407 48.3156 -123.5406 48.3152 -123.540'"
      ]
     },
     "execution_count": 188,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "txt[:1900]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "wcs = WebCoverageService(geomet_wcs_url, version='1.0.0')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'RDPS.ETA - Precipitation accumulation'"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "layer_ids = ['RDPS.ETA_PR',] # 'REPS.DIAG.3_PRMM.ERMEAN'\n",
    "lid = layer_ids[0]\n",
    "meta = wcs.contents[lid]\n",
    "meta.title"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    ""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "desc = {}\n",
    "for key, val in wcs.contents.items():\n",
    "    if 'PR' in key:\n",
    "        if val.supportedFormats != []:\n",
    "            desc[key] = val\n",
    "    if len(desc) > 40:\n",
    "        break"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dict_keys(['HRDPA.6F_PR', 'HRDPA.6P_PR', 'HRDPA.24F_PR', 'HRDPA.24P_PR', 'HRDPS.CONTINENTAL.PRES_ES.50', 'HRDPS.CONTINENTAL.PRES_ES.100', 'HRDPS.CONTINENTAL.PRES_ES.225', 'HRDPS.CONTINENTAL.PRES_ES.250', 'HRDPS.CONTINENTAL.PRES_ES.300', 'HRDPS.CONTINENTAL.PRES_ES.350', 'HRDPS.CONTINENTAL.PRES_ES.450', 'HRDPS.CONTINENTAL.PRES_ES.500', 'HRDPS.CONTINENTAL.PRES_ES.600', 'HRDPS.CONTINENTAL.PRES_ES.700', 'HRDPS.CONTINENTAL.PRES_ES.750', 'HRDPS.CONTINENTAL.PRES_ES.800', 'HRDPS.CONTINENTAL.PRES_ES.900', 'HRDPS.CONTINENTAL.PRES_ES.970', 'HRDPS.CONTINENTAL.PRES_ES.985', 'HRDPS.CONTINENTAL.PRES_ES.1000', 'HRDPS.CONTINENTAL.PRES_ES.1015', 'HRDPS.CONTINENTAL.PRES_GZ.100', 'HRDPS.CONTINENTAL.PRES_GZ.200', 'HRDPS.CONTINENTAL.PRES_GZ.250', 'HRDPS.CONTINENTAL.PRES_GZ.700', 'HRDPS.CONTINENTAL.PRES_GZ.925', 'HRDPS.CONTINENTAL.PRES_GZ.1000', 'HRDPS.CONTINENTAL.PRES_HR.50', 'HRDPS.CONTINENTAL.PRES_HR.150', 'HRDPS.CONTINENTAL.PRES_HR.225', 'HRDPS.CONTINENTAL.PRES_HR.250', 'HRDPS.CONTINENTAL.PRES_HR.300', 'HRDPS.CONTINENTAL.PRES_HR.400', 'HRDPS.CONTINENTAL.PRES_HR.500', 'HRDPS.CONTINENTAL.PRES_HR.550', 'HRDPS.CONTINENTAL.PRES_HR.600', 'HRDPS.CONTINENTAL.PRES_HR.650', 'HRDPS.CONTINENTAL.PRES_HR.700', 'HRDPS.CONTINENTAL.PRES_HR.750', 'HRDPS.CONTINENTAL.PRES_HR.800', 'HRDPS.CONTINENTAL.PRES_HR.950'])"
      ]
     },
     "execution_count": 73,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "desc.keys()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 196,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['DANK:DANK:D15a1-Waterbergend_vermogen_Regionale wateren',\n",
       " 'DANK:DANK-005c - Gewasverdampingsreductie',\n",
       " 'DANK:DANK-008a_verzilting_grondwater',\n",
       " 'DANK:DANK-022_Delftstofwinning_op_land_en_in_binnenwateren_rivier',\n",
       " 'DANK:DANK005a_irrigatiewater_kwelafname',\n",
       " 'DANK:DANK013_Waterzuivering_Waddenzee',\n",
       " 'DANK:DANK015_waterberging_grondwater',\n",
       " 'DANK:DANK017_waterregulering_ondergrond',\n",
       " 'DANK:DANK024a_draagkracht_totale_zetting',\n",
       " 'DANK:DANK-006-Drinkwater',\n",
       " 'global:Globcover2009 V2.3',\n",
       " 'global:Sediment Thickness of the World',\n",
       " 'TestDank:sld_cookbook_raster',\n",
       " 'global:srtmplus15']"
      ]
     },
     "execution_count": 196,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import os\n",
    "import tempfile\n",
    "from owslib.wcs import WebCoverageService\n",
    "url = 'http://deltaresdata.openearth.nl/geoserver/ows?'\n",
    "wcs = WebCoverageService(url,version='1.0.0')\n",
    "wcs.identification.type\n",
    "wcs.identification.title\n",
    "list(wcs.contents)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 197,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[{'bbox': (-180.04167, -90.04167, 180.04167, 90.04167),\n",
       "  'nativeSrs': 'EPSG:4326'}]"
      ]
     },
     "execution_count": 197,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sed = wcs['global:Sediment Thickness of the World']\n",
    "sed.keywords\n",
    "sed.grid.highlimits\n",
    "sed.boundingboxes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 214,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "requestbbox = (-7.283406057098745, 35.59251369598765, -5.266739197530853, 37.6050139853395)\n",
    "requestwidth = 40\n",
    "requestheight = 30\n",
    "gc = wcs.getCoverage(identifier=sed.id,\n",
    "                                  bbox=requestbbox,\n",
    "                                  format='GeoTIFF',\n",
    "                                  crs=sed.boundingboxes[0]['nativeSrs'],\n",
    "                                  width=requestwidth,\n",
    "                                  height=requestheight)\n",
    "# random unique filename\n",
    "tmpdir = tempfile.gettempdir()\n",
    "fn = os.path.join(tmpdir,'test.tif')\n",
    "f = open(fn,'wb')\n",
    "f.write(gc.read())\n",
    "f.close()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 215,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GEOGCS[\"WGS 84\",\n",
      "    DATUM[\"WGS_1984\",\n",
      "        SPHEROID[\"WGS 84\",6378137,298.257223563,\n",
      "            AUTHORITY[\"EPSG\",\"7030\"]],\n",
      "        AUTHORITY[\"EPSG\",\"6326\"]],\n",
      "    PRIMEM[\"Greenwich\",0],\n",
      "    UNIT[\"degree\",0.0174532925199433],\n",
      "    AUTHORITY[\"EPSG\",\"4326\"]]\n"
     ]
    }
   ],
   "source": [
    "from osgeo import gdal, osr\n",
    "\n",
    "gdal.UseExceptions()\n",
    "fname = fn\n",
    "\n",
    "ds = gdal.Open(fname)\n",
    "data = ds.ReadAsArray()\n",
    "gt = ds.GetGeoTransform()\n",
    "proj = ds.GetProjection()\n",
    "\n",
    "inproj = osr.SpatialReference()\n",
    "inproj.ImportFromWkt(proj)\n",
    "\n",
    "print(inproj)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 216,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\nrnycUlWV5LVJPnTmtu7+Rnf/2fT6W0m+lOSasSM898425yQ3Jnm4u/+yu59J8uEkPz61OZTko1O9\nDyS5ZcR4n4W3JPmV7j6WJN392Ab1X5Xkq919ti+g2+rmnfOZfjwrxzbZHsc4mWHOO/BcnuU476Rz\neV474Vx+trbjuTy3bRs+krxhaGVXAAAC6ElEQVQiyX/o7q+crVJVfXeSG5Lcu6r4v6+q+6vqfdvs\nktbZ5nxNkr9atf7IVHZVkie6+8QZ5VvZ30vyiuny8h9X1cs2qP/6fHsg227HeNY5d5I/qKrPV9Wt\nq8q/s7u/kaz8DzvJ8xc83nNhruO8Q87lWea8k87lZL5jtBPO5WS2Me+kc3luWzJ8VNUfVtUX11h+\nfFW1N2TtKwCr+3lOko8l+Wfd/c2p+N1JXpTkQJJvZOVjjPPuHMy51ijrs5SfVxvMd3eSK5K8PMlb\nk3xk+q1vrX72JPmxJL+7qng7HuNZ5/yD3f0PkvyXSf5pVf3QuBnM7xwe551yLs8y5510Ls98jHbQ\nuTzrmLfVuXzOne/PfTazZOUE/g9Jrj1LnaUkdyb5+bPU+e4kXzzf8zkXc07ynyW5c9X626elsvK3\nBHavVW8rLkn+zyT/cNX6V5NcvU7dH0/yB9v9GM8z51V1finTZ8tJvpxk//R6f5Ivn+85nas576Rz\neZY576RzeZ5jtFPO5c2Mebufy5tZtuSVjxnclOTB7n5krY3TbxK/keRL3f1/nLFt/6rVn0jyxYWN\n8tw665yTfC7Ji2vlbvg9Wbl8+cleeQffneQ1U703JvnEwkf77Hw8K59tp6r+XlZuulvvjzF929Wg\nbXqMN5xzVV1aVZedep3k1Tk9t09m5dgm2+MYJ7PNeaedy7O8t3fMuTznMdoR5/IsY96B5/L8znf6\n2WSafH+SN59R9oIkvz+9/i+ycjny/iRHpuVHpm2/neQL07ZPZkqYW33ZaM7T+o9k5WmAryb5n1eV\nf2+SzyZ5OCuXNPee7/lsMNc9SX4nKyfjnyU5tM58L0nyt0m+44z22+4YzzLn6TjeNy0PnHGMr0ry\nqSRfmf698nzP6RzNeUedy3O8t3fKubzmMdrh5/KGc95p5/JmFt9wCgAMtV0/dgEAtinhAwAYSvgA\nAIYSPgCAoYQPAGAo4QMAGEr4AACGEj4AgKH+X+P1AtnotXKqAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<Figure size 648x648 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import cartopy.crs as ccrs\n",
    "projection = ccrs.PlateCarree()\n",
    "\n",
    "subplot_kw = dict(projection=projection)\n",
    "fig, ax = plt.subplots(figsize=(9, 9))\n",
    "\n",
    "extent = (gt[0], gt[0] + ds.RasterXSize * gt[1],\n",
    "          gt[3] + ds.RasterYSize * gt[5], gt[3])\n",
    "\n",
    "img = ax.imshow(data[:, :], extent=extent, origin='upper')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 204,
   "metadata": {},
   "outputs": [
    {
     "ename": "ParseError",
     "evalue": "not well-formed (invalid token): line 60, column 20 (<string>)",
     "traceback": [
      "\u001b[0;36m  File \u001b[0;32m\"<string>\"\u001b[0;36m, line \u001b[0;32munknown\u001b[0m\n\u001b[0;31mParseError\u001b[0m\u001b[0;31m:\u001b[0m not well-formed (invalid token): line 60, column 20\n"
     ],
     "output_type": "error"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import cartopy.crs as ccrs\n",
    "from cartopy.io import shapereader\n",
    "\n",
    "# set up a map with coastlines around Auckland:\n",
    "plt.figure(figsize=(10, 10))\n",
    "platecarree = ccrs.PlateCarree(globe=ccrs.Globe(datum='WGS84'))\n",
    "\n",
    "ax = plt.axes(projection=platecarree)\n",
    "extent = [174.25, 175.25, -37.5, -36.5]\n",
    "ax.set_extent(extent)\n",
    "#ax.coastlines('10m',color='red')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 206,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(3, 4)"
      ]
     },
     "execution_count": 206,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.6",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
