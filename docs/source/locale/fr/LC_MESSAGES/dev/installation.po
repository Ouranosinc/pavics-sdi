# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016, Ouranos & CRIM
# This file is distributed under the same license as the PAVICS package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PAVICS 0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-09-19 16:48-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

#: ../../source/dev/installation.rst:3
msgid "Installation and Deployment"
msgstr ""

#: ../../source/dev/installation.rst:5
msgid ""
"Since all of the code produced for the PAVICS project is hosted on public"
" GitHub repositories, and that the preferred methodology for packaging "
"and deployment uses Docker images, we set out to use the automatic Docker"
" Image building feature of `DockerHub`_. This feature automatically "
"builds a new image for every push to the GitHub repository for all given "
"branches, given that these repositories have a Dockerfile. The `resulting"
" images <https://hub.docker.com/u/pavics/>`_ are all publicly available "
"for container execution and sharing of our work. Any docker image can be "
"obtained using the following command::"
msgstr ""

#: ../../source/dev/installation.rst:9
msgid ""
"Most of the code base has been forked from the Birdhouse project which "
"already has multiple DockerHub `build processes "
"<https://hub.docker.com/u/birdhouse>`_. Using our own DockerHub builds "
"gives us the advantage of having our own upstream build process for the "
"code being modified by CRIM / Ouranos. Many of the modifications to these"
" birdhouse components are merged upstream, but some are specific to the "
"PAVICS project and we felt it was worthwhile to have this independent "
"build process."
msgstr ""

#: ../../source/dev/installation.rst:12
msgid "Hardware configuration"
msgstr ""

#: ../../source/dev/installation.rst:16
msgid "Installation using ``docker-compose``"
msgstr ""

#: ../../source/dev/installation.rst:18
msgid ""
"Let's assume that you have a LinuxOS with `Docker`_ (>1.10) installed. "
"First mount or create a symlink for for the datasets storage at "
"``/data``. Mount or make a symlink for the geoserver data storage so that"
" ``/geoserver_data`` could be used (read/write) by geoserver To install "
"the suite of docker images, we use `docker-compose "
"<https://docs.docker.com/compose/>`_, so you'll need to install it::"
msgstr ""

#: ../../source/dev/installation.rst:25
msgid "Then get the *build recipe* from `pavics-sdi`_::"
msgstr ""

#: ../../source/dev/installation.rst:30
msgid ""
"In the file :file:`docker-compose.yml`, within the ``phoenix/volumes`` "
"configuration, set the environment variable SSL_CERTIFICATE  to a valid "
"certificate. The certificate file should contain both the CERTIFICATE and"
" PRIVATE KEY parts as required by the nginx \"ssl_certificate_key\" and "
"\"ssl_certificate\" parameters."
msgstr ""

#: ../../source/dev/installation.rst:32
msgid ""
"Then simply run the following command, taking care to select an "
"appropriate host name::"
msgstr ""

#: ../../source/dev/installation.rst:36
msgid ""
"This installation will run on a single server instance, but there are "
"instructions for :ref:`load_balancing`."
msgstr ""

#: ../../source/dev/installation.rst:40
msgid "Updating container to the latest version"
msgstr ""

#: ../../source/dev/installation.rst:42
msgid ""
"To synchronize a deployment with the latest version of container "
"available on dockerhub::"
msgstr ""

#: ../../source/dev/installation.rst:59
msgid ""
"``container_name`` is the name chosen in the docker-compose.yml, not the "
"name of the docker image."
msgstr ""

#: ../../source/dev/installation.rst:63
msgid "Resetting the birdhouse dockers"
msgstr ""

#: ../../source/dev/installation.rst:65
msgid ""
"If the VM became unusable the docker containers can easily be reset to "
"default::"
msgstr ""

#: ../../source/dev/installation.rst:79
msgid "Restarting the birdhouse dockers"
msgstr ""

#: ../../source/dev/installation.rst:81
msgid ""
"If the dockers containers need to be stopped (including the docker "
"service if required). These steps will preserve the docker state and thus"
" all configurations done using the web sites::"
msgstr ""

#: ../../source/dev/installation.rst:92
msgid "And starting dockers (required after restarting the host vm)::"
msgstr ""

#: ../../source/dev/installation.rst:106
msgid "Ports"
msgstr ""

#: ../../source/dev/installation.rst:108
msgid ""
"The :file:`docker-compose.yml` config file exposes ports for each docker "
"container (left part is the public one, right part the container internal"
" one). We try to respect the following convention::"
msgstr ""

#: ../../source/dev/installation.rst:115
msgid "Container xxx value::"
msgstr ""

#: ../../source/dev/installation.rst:127
msgid "The exception is the Pavics-frontend, which has port 3000."
msgstr ""

#: ../../source/dev/installation.rst:131
msgid "Individual Components Configuration"
msgstr ""

#: ../../source/dev/installation.rst:133
msgid ""
"All birdhouse components are deployed and configured using the same "
"technique, which consists in:"
msgstr ""

#: ../../source/dev/installation.rst:135
msgid ""
"Run ``docker-compose`` on a :file:`docker-compose.yml` config file to "
"launch a group of containers using their images and some options."
msgstr ""

#: ../../source/dev/installation.rst:136
msgid ""
"When a container is starting a make call with the target update-config "
"and start is done (specified by the dockerfile CMD statement)"
msgstr ""

#: ../../source/dev/installation.rst:138
msgid ""
"The update-config target update the container application config using "
"buildout and the custom.cfg config file"
msgstr ""

#: ../../source/dev/installation.rst:139
msgid "The start target launch the application using supervisor"
msgstr ""

#: ../../source/dev/installation.rst:141
msgid ""
"To customize the container application config we must update the "
"custom.cfg file used by the buildout recipe of each container."
msgstr ""

#: ../../source/dev/installation.rst:143
msgid ""
"Since custom.cfg is built into the docker image and thus reset each time "
"we run an image the only way to alter it is to mount a host file inside "
"the container using the volume option. Therefore a :file:`custom.cfg` is "
"configured on host for each birdhouse component and mounted inside the "
"container using the volume option of the :file:`docker-compose.yml` file."
" This way each time a container is started, it is configured by the host "
":file:`custom.cfg` file which indeed persist the lifecycle of a container"
" The :file:`custom.cfg` is a buildout configuration file which extends "
":file:`buildout.cfg` providing default parameters. Each birdhouse "
"component has it's own buildout recipe looking for particular parameters "
"to configure their application. An exemple of recipe for ncWMS can be "
"found here:  https://github.com/bird-house/birdhousebuilder.recipe.ncwms."
" Look on github for other components recipe : https://github.com/bird-"
"house."
msgstr ""

#: ../../source/dev/installation.rst:147
msgid "Phoenix"
msgstr ""

#: ../../source/dev/installation.rst:149
msgid ":file:`/config/phoenix/custom.cfg`"
msgstr ""

#: ../../source/dev/installation.rst:156
msgid ""
"To change password get into the phoenix running container and use ``make "
"passwd``. This will update the persistant host :file:`custom.cfg` with "
"the new password hash. If an error about missing ``IPython.lib`` occurs "
"install `ipython`_ like this::"
msgstr ""

#: ../../source/dev/installation.rst:162
msgid ""
"Phoenix still need manual configuration so SOLR indexes correctly the "
"TREDDS catalog. Here are the steps:"
msgstr ""

#: ../../source/dev/installation.rst:164
msgid "Go to https://<platform_url>:8443/"
msgstr ""

#: ../../source/dev/installation.rst:165
msgid "Click on the login button |login|"
msgstr ""

#: ../../source/dev/installation.rst:166
msgid "Use the admin phoenix access with 'querty' password:"
msgstr ""

#: ../../source/dev/installation.rst:170
msgid "Go to the settings page |settings|"
msgstr ""

#: ../../source/dev/installation.rst:171
msgid "Click on the service button:"
msgstr ""

#: ../../source/dev/installation.rst:175
msgid "Register a new service:"
msgstr ""

#: ../../source/dev/installation.rst:179
msgid ""
"Fill the form using the thredds catalog url (use the OpenStack internal "
"IP), a service name of your choice and be sure to check the Thredds "
"Catalog service type :"
msgstr ""

#: ../../source/dev/installation.rst:183
msgid "Click on the register button"
msgstr ""

#: ../../source/dev/installation.rst:184
msgid ""
"Go to the Solr settings page by repeating the steps 4 and 5 but this time"
" using the Solr button."
msgstr ""

#: ../../source/dev/installation.rst:188
msgid ""
"Use the Parameters tab and increase the crawling depth to match the "
"deepest catalog depth :"
msgstr ""

#: ../../source/dev/installation.rst:189
msgid ""
"Activate the crawling in the Thredds Services tab by clicking on the "
"toggle button near the + symbol."
msgstr ""

#: ../../source/dev/installation.rst:193
msgid "The status should turn to green when you click on the refresh button."
msgstr ""

#: ../../source/dev/installation.rst:195
msgid "You're done !"
msgstr ""

#: ../../source/dev/installation.rst:198
msgid "ncWMS"
msgstr ""

#: ../../source/dev/installation.rst:200
msgid ":file:`/config/ncwms2/custom.mfg`"
msgstr ""

#: ../../source/dev/installation.rst:210
msgid "Manual setup of the running docker"
msgstr ""

#: ../../source/dev/installation.rst:211
msgid ""
"To access the ncWMS admin page (changes be overriden each time the "
"container is restarted), edit the file: "
":file:`/opt/conda/envs/birdhouse/opt/apache-tomcat/conf/tomcat-users.xml`"
" and remove the comment block around the manager-gui and ncWMS-admin "
"role. The administration page allow administrators to add new datasets "
"but again it will not persist upon container restarting."
msgstr ""

#: ../../source/dev/installation.rst:215
msgid "Default Tomact credentials::"
msgstr ""

#: ../../source/dev/installation.rst:220
msgid "Default ncWMS credentials::"
msgstr ""

#: ../../source/dev/installation.rst:226
msgid "Dynamic services"
msgstr ""

#: ../../source/dev/installation.rst:227
msgid ""
"The dynamic services section allow with only one command to enable access"
" to all the database available at "
":file:`M:\\data16\\projets\\multi\\PAVICS\\data` by configuring a file "
"system entrypoint. The only thing to do is to use the following url: "
"http://<domain>:8080/ncWMS2/wms?SERVICE=WMS&REQUEST=GetCapabilities&VERSION=1.3.0&DATASET=outputs/<path>"
" and replace ``<path>`` by the relative path to "
":file:`M:\\data16\\projets\\multi\\PAVICS\\data` to the required dataset."
" So thanks to this config and to the catalog service we should be able to"
" get the entire database list from the catalog and access their WMS by "
"using the relative path in the wms url."
msgstr ""

#: ../../source/dev/installation.rst:231
msgid "Thredds"
msgstr ""

#: ../../source/dev/installation.rst:242
msgid "Hummingbird"
msgstr ""

#: ../../source/dev/installation.rst:244
msgid ""
"First try at running CDO operation using the Hummingbird WPS (with url "
"for input NetCDF file, only seems to work with the fileserver, not "
"OPeNDAP), e.g. : "
"http://132.217.140.31:8092/wps?service=WPS&version=1.0.0&request=Execute&identifier=cdo_operation&DataInputs=dataset=http://192.168.101.175:8083/thredds/fileServer/birdhouse/nrcan/nrcan_canada_daily/nrcan_canada_daily_pr_1960.nc;operator=monmax"
" returns \"PyWPS Process cdo_operation successfully calculated\". However"
" the output points to a NetCDF file on localhost "
"(http://localhost:38092/wpsoutputs/hummingbird/output-4f80cb02-58db-"
"11e6-8a37-533b457038a6.nc). Need to substitute localhost for the ip "
"(132.217.140.31) and keep the same port : "
"http://132.217.140.31:38092/wpsoutputs/hummingbird/output-4f80cb02-58db-"
"11e6-8a37-533b457038a6.nc Previous note: the same operation with the "
"command-line, and using the OPeNDAP link (i.e. >> cdo monmax "
"http://132.217.140.31:8083/thredds/dodsC/birdhouse/nrcan/nrcan_canada_daily/nrcan_canada_daily_pr_1960.nc"
" output.nc) succeeds, in ~3 minutes. It is much faster if the file is "
"local. This brings up the question of whether we should pass the "
"catalogue url when we know the file is actually on a local machine... "
"Trying to execute the same process via our Phoenix installation is not "
"possible. The execute button remains greyed out after entering an url and"
" selecting an operator."
msgstr ""

#: ../../source/dev/installation.rst:253
msgid "PAVICS-DataCatalog"
msgstr ""

#: ../../source/dev/installation.rst:255
msgid ""
"In the catalog.cfg file: Provide the solr and thredds host. Set the wps "
"host to the server that will be exposing the catalog (this is the server "
"where wps temporary output files will be saved). Set the WMS alternate "
"server if desired."
msgstr ""

