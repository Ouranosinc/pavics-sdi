language: generic

dist: xenial

branches:
    only:
      - master

matrix:
    fast_finish: true
    include:
        - env:
              - CONDA_BINARY="Miniconda3-latest-Linux-x86_64.sh"
              - PYTHON_BUILD=3.7
              - GRAB=wget
          os: linux
          name: "Python3.7 - Linux"
#        - env:
#              - CONDA_BINARY="Miniconda3-latest-Linux-x86_64.sh"
#              - PYTHON_BUILD=3.6
#              - GRAB=wget
#          os: linux
#          name: "Python3.6 - Linux"
#        - env:
#              - CONDA_BINARY="Miniconda3-latest-MacOSX-x86_64.sh"
#              - PYTHON_BUILD=3.6
#              - GRAB='curl --output output-sanitize.cfg'
#          os: osx
#          name: "Python3.6 - Darwin (macOS)"

# before_install will simply setup a conda environment for installing python packages, if you
# have project dependencies it's usually recommended to go this route
before_install:
    - wget "http://repo.continuum.io/miniconda/$CONDA_BINARY" -O miniconda.sh
    - chmod +x miniconda.sh
    - bash ./miniconda.sh -b
    - export PATH=$HOME/miniconda3/bin:$PATH
    - source activate
    - conda update --yes conda

install:
    - conda install pip
    - pip install conda-merge
    - conda-merge environment.yml environment-dev.yml > merged_env.yml
    - conda create --yes -n pavics-sdi python=$PYTHON_BUILD
    - conda-env update -n pavics-sdi --file merged_env.yml
    - source activate pavics-sdi
    - cd docs
    - bash -c "$GRAB https://raw.githubusercontent.com/Ouranosinc/PAVICS-e2e-workflow-tests/master/notebooks/output-sanitize.cfg"

script:
    - make clean html
    - pytest --nbval --sanitize-with output-sanitize.cfg -k 'not esgf-dap' source/notebooks   # regex_patterns.cfg
